# Отфильтруйте текст, чтобы эту фигню можно было прочесть. 
# Предусмотрите вариант, что мусорные слова могли быть написаны без использования запятых.

text = \
'Ну, вышел я, короче, из подъезда. В общем, короче говоря, шел я, кажется, в магазин. \
Ну, эээ, в общем, было лето, кажется. Как бы тепло. Солнечно, короче. Иду я, иду, в общем, \
по улице, а тут, короче, яма. Я, эээээ…. Упал в нее. И снова вышел, короче, из подъезда. \
Ясен пень, в магазин. В общем, лето на дворе, жарко, солнечно, птицы, короче, летают. \
Кстати, иду я по улице, иду, а тут, короче, яма. Ну, я в нее упал, в общем. Вышел из подъезда, короче. \
Лето на дворе, ясен пень. Птицы поют, короче, солнечно. В общем, в магазин мне надо. Что-то явно не так, \
короче. «Рекурсия», - подумал я. Ээээ... короче, в общем, пошел другой дорогой и не упал в эту… ээээ… яму. \
Хлеба купил.' 

def GarbageDrop(local_text):
    bad_words = ('эээ', 'ну', 'короче', 'кажется', 'кстати')
    bad_phrases = ('в общем, говоря','в общем','ясен пень','как бы',' ,')

    list = local_text.lower().split(' ')
    
    list = [list[i] for i in range(len(list)) if sum([list[i].find(bad_words[j]) for j in range(len(bad_words))]) == -len(bad_words)]
    
    s = ' '.join(list)
    for i in range(len(bad_phrases)):
        while len(s.partition(bad_phrases[i])[1])>0: 
            s = s.partition(bad_phrases[i])[0] + s.partition(bad_phrases[i])[2] 

    s = s.replace('  ',' ').replace(', .','.')

    
    list = s.split(' ')
    list[0] = list[0].title()
    for i in range(1,len(list)):
        if list[i-1].endswith('.'): 
            list[i] = list[i].title()
    
    return ' '.join(list)

print(text)

print(GarbageDrop(text))